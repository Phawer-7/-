from aiogram import Bot, types, Dispatcher, executor
from aiogram.types import ParseMode
from aiogram.utils.markdown import text, bold, code

from localization import *
from config import bot_token, admins_id, chat_report, command_chat

bot = Bot(token=bot_token)
dp = Dispatcher(bot)


@dp.message_handler(commands=["–≥—É—Ä", "–ì—É—Ä", "Gur", "gur"], commands_prefix="/!")
async def ban_user(message: types.Message):
    if message.from_user.id in admins_id:
        if not message.reply_to_message:
            userId = message.text.split()[1]

            try:
                await message.bot.kick_chat_member(chat_id=command_chat, user_id=int(userId))
            except ValueError:
                pass

            await message.reply_to_message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {userId} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
            return

        await message.bot.kick_chat_member(chat_id=command_chat, user_id=message.reply_to_message.from_user.id)

        await message.reply_to_message.reply(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.from_user.first_name} –±—ã–ª "
                                             f"–∑–∞–±–∞–Ω–µ–Ω.")
    else:
        await message.answer("–¢—ã —á–æ –∑–∞ –Ω–Ω?")


@dp.message_handler(commands=['start'])
async def send_start(message: types.Message):
    await message.reply(
        "/–≥–∏—Ä - –ü–æ–ª—É—á–∏—Ç—å —Å–∞–º—ã–π –æ–±—ã—á–Ω—ã–π –Ω–∏–∫ \n/–≥–∏—Ä {—Ü–≤–µ—Ç} - –ü–æ–ª—É—á–∏—Ç—å –Ω–∏–∫ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∫—Ä—É–≥–æ–º. \"/–≥–∏—Ä –±–µ–ª—ã–π\" –¥–∞—Å—Ç "
        "–Ω–∏–∫ —Å –±–µ–ª—ã–º –∫—Ä—É–≥–æ–º. –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–∞: —á–µ—Ä–Ω—ã–π, –∂–µ–ª—Ç—ã–π –∏ –±–µ–ª—ã–π")


@dp.message_handler(commands=['list'], commands_prefix="!/")
async def send_list_of_triggers(message: types.Message):
    monotext = text(code("/gir trigger"))
    await message.answer(f'{monotext}\n–°–ø–∏—Å–æ–∫ triggers:\n\n{send_name(dictt=True)}', parse_mode=ParseMode.MARKDOWN)


@dp.message_handler(commands=['get_chat_id'])
async def get_id(message: types.Message):
    await message.answer(message.chat.id)


@dp.message_handler(commands=["–ì–∏—Ä", "–≥–∏—Ä", "gir", "Gir"], commands_prefix="!/")
async def send_ready_nick(message: types.Message):
    result = [i for i in message.from_user.first_name if i in normal_char or i in caps_normal_char]
    ready_nick = "".join(result)

    await bot.send_message(chat_report, f'{message.from_user.first_name} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª {message.text} –≤ '
                                        f'{message.chat.title}(#{message.chat.id})')

    try:
        ready_name = send_name(name=ready_nick, color=message.text.split()[1], user_id=message.from_user.id)
        await message.answer(ready_name)

    except IndexError:
        if message.from_user.id == 819411604:  # exception for @minusoo
            await message.answer(emoji.emojize(f'üéª Ä·¥á|:joystick:{ready_nick}:musical_note:üåÖ'))
        else:
            await message.answer(f'üéª Ä·¥á|{ready_nick}üåÖ')


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
